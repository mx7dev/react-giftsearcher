{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","Hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","animate__animated","animate__flash","key","GifExpertApp","categories","c","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAa,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,cAAoB,EAEXC,mBAAS,IAFE,mBAEvCC,EAFuC,KAE5BC,EAF4B,KAkB9C,OACI,oCACA,0BAAMC,SAdW,SAACC,GAClBA,EAAEC,iBAGGJ,EAAWK,OAAOC,OAAO,IAC1BR,GAAe,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OACrCN,EAAe,OAUf,2BAAOO,KAAK,OACRC,MAAOT,EACPU,SArBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,uBCLhBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfC,EAFe,iDAEiCC,UAAUH,GAF3C,+DAGFI,MAAMF,GAHJ,cAGfG,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATrB,kBAadM,GAbc,4CAAH,sDCATO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGjC,OACI,yBAAKc,UAAU,2CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAe,IAAD,EAEbd,mBACtB,CACIqB,KAAK,GACLa,SAAQ,IALuB,mBAEhCC,EAFgC,KAEzBC,EAFyB,KA8BvC,OAtBAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAKtB,CAACpB,IAWIqB,EDzB2BK,CAAc1B,GAAnCa,EAHwB,EAG7BN,KAAca,EAHe,EAGfA,QAItB,OACI,oCAEI,wBAAIJ,UAAU,qCAAd,IAAoDhB,GAE5DoB,GAAW,uBAAGO,mBAAiB,EAACC,gBAAc,GAAnC,WAEH,yBAAKZ,UAAU,aAEPH,EAAOJ,KAAI,SAAAC,GAAG,OAEV,kBAAC,EAAD,eACImB,IAAKnB,EAAIC,IACLD,UEtBnBoB,EAAe,WAAO,IAAD,EAEK5C,mBAAS,CAAC,cAFf,mBAEvB6C,EAFuB,KAEZ9C,EAFY,KAI9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAcA,cAAgBA,IAC9B,6BACA,4BAEO8C,EAAWtB,KAAK,SAAAuB,GAAC,OAChB,kBAAC,EAAD,CACIH,IAAMG,EACNhC,SAAWgC,U,MCZnCC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.d3b1fa35.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory =( { setCategories}) =>  {\r\n\r\n    const [inputValue,setInputValue] = useState('')\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        //console.log('Submit hecho');\r\n\r\n        if ( inputValue.trim().length>2){\r\n            setCategories( cats=> [inputValue,...cats]);\r\n            setInputValue ('');\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={ handleSubmit}>\r\n\r\n            <input type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n        </>\r\n\r\n    )\r\n    \r\n\r\n}\r\nAddCategory.propTypes ={\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n  export const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=9xrzC89xNNBBlyxP9WFJ4RIq1OxORiAM`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn \">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","//import React, { useState, useEffect } from 'react'\r\nimport React from 'react'\r\nimport { useFetchGifs } from '../Hooks/useFetchGifs'\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    const { data:images,  loading}  = useFetchGifs( category);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <h3 className=\"animate__animated animate__fadeIn\"> {category}</h3>\r\n\r\n  { loading && <p animate__animated animate__flash>Loading</p>  }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                        \r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) =>  {\r\n\r\n    const [state, setState] = useState(\r\n        {\r\n            data:[],\r\n            loading:true\r\n        } );\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then( imgs =>{\r\n                setState({ \r\n                    data:imgs,\r\n                    loading:false\r\n                });\r\n            })\r\n\r\n\r\n    },[category]);\r\n\r\n    // setTimeout(() => {\r\n\r\n    //     setState({\r\n    //         data:[1,2,3,4,5,6,7],\r\n    //         loading:false\r\n    //     });\r\n        \r\n    // }, 3000);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories,setCategories] = useState(['One Piece']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory  setCategories={ setCategories} />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                   categories.map( c=>  (\r\n                    <GifGrid  \r\n                        key={ c}\r\n                        category={ c}\r\n                    />\r\n                   )) \r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n \nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}